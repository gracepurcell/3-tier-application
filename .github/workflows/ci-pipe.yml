name: "Build, Test and Deploy App to Docker with EC2"

on: 
  push:
    branches: [main]

jobs: 

  build-api:
    runs-on: ubuntu-latest
    services:
      postgres: 
        image: 'postgres:latest'
        env:
          POSTGRES_PASSWORD: admin123
          POSTGRES_USER: postgres
          POSTGRES_DB: basic3tier
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d basic3tier"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: checkout app
        uses: actions/checkout@v4

      - name: Setup Dotnet for Application
        uses: actions/setup-dotnet@v3
        with: 
          dotnet-version: '7'

      - name: Build Backend
        run: nohup dotnet build --configuration Release --no-restore &
        working-directory: ./api
        env:
          ConnectionStrings__Basic3Tier: "Host=postgres;Port=5432;Database=basic3tier;Username=postgres;Password=admin123"

  api-image:
    runs-on: ubuntu-latest
    needs: build-test-api
    steps:
      - name: checkout app
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2        
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./api
          tags: ${{ secrets.DOCKER_USERNAME }}/3-tier-application:ci-api
          push: true

  ui-image:
    runs-on: ubuntu-latest
    needs: build-test-api
    steps:
      - name: checkout app
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2        
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./ui
          tags: ${{ secrets.DOCKER_USERNAME }}/3-tier-application:ci-ui
          push: true

  aws-ec2:
    runs-on: ubuntu-latest
    needs: [api-image, ui-image]
    steps:
      - name: Store Key on Job runner
        run: |
          mkdir -p ~/.shh
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.AWS_EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts
      
      - name: Sign into EC2
        run: |
          sudo ssh -i ${{ secrets.AWS_SSH_PRIVATE_KEY }} ubuntu@${{ secrets.AWS_EC2_PUBLIC_IP }} /bin/bash  << EOF
          git clone https://github.com/gracepurcell/3-tier-application.git
          cd 3-tier-application
          docker compose up
          EOF
